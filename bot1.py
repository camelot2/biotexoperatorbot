from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import logging

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

TOKEN = '8180023065:AAE0IIRmyPD88XIIOp9xpjr7RFbYxcsENXc'

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üá∫üáø –é–∑–±–µ–∫ —Ç–∏–ª–∏"), KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º! –ò–ª—Ç–∏–º–æ—Å, —Ç–∏–ª–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ / –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def handle_language_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üá∫üáø –é–∑–±–µ–∫ —Ç–∏–ª–∏":
        await update.message.reply_text("–°–∏–∑ —û–∑–±–µ–∫ —Ç–∏–ª–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑.")
    elif text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫":
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.")
    else:
        await update.message.reply_text("–ò–ª—Ç–∏–º–æ—Å, —Ç–∏–ª–Ω–∏ —Ç–∞–Ω–ª–∞—à —É—á—É–Ω —Ç—É–≥–º–∞–ª–∞—Ä–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏–Ω–≥ / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_language_choice))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞...")
    app.run_polling()

if __name__ == '__main__':
    main()